name: Publish to pnpm

on:
  push:
    branches:
      - main

#jobs:
#  publish:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#          registry-url: 'https://registry.npmjs.org'
#
#      - name: Install dependencies
#        run: npm install
#      - name: WhoAmI
#        env:
#          GH_TOKEN: ${{ github.token }}
#        run: |
#          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
#          git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
#          git config -l
#      - name: Bump version and tag
#        id: bump_version
#        run: |
#          VERSION=$(npm version patch -m "chore(release): %s")
#          echo "::set-output name=VERSION::$VERSION"
#
#      - name: Push new tag to repository
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          git push origin HEAD:main --tags
#
#      - name: Publish to pnpm
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#        run: |
#          run echo ${{ secrets.NPM_TOKEN }}
#          npm ci
#          npm publish

jobs:
  publish:
    # When setting up node:
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    # ...[build & test etc]...

    # Bump the version & push (if you're not doing that elsewhere)
    - name: Bump version & push
      run: |
        git config --global user.name 'Automated publish'
        git config --global user.email '$YOUR_USERNAME@users.noreply.github.com'
    
        # Update the version in package.json, and commit & tag the change:
        npm version patch # YMMV - you might want the semver level as a workflow input
    
        git push && git push --tags

    # Publish the result to npm with your granular token:
    - run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}